{
  "version": 3,
  "sources": ["../src/cli.ts", "../src/index.ts"],
  "sourcesContent": ["#!/usr/bin/env node\nimport yargs from \"yargs\";\nimport { hideBin } from \"yargs/helpers\";\nimport chromeDev from \"./index\";\n\ncli();\n\n/**\n *\n * @author: snomiao <snomiao@gmail.com>\n */\nexport default async function cli() {\n  const argv = await yargs(hideBin(process.argv))\n    .scriptName(\"chrome-dev\")\n    .string(\"extension\")\n    .describe(\"extension\", \"extension mode\")\n    .number(\"port\")\n    .describe(\"port\", \"open http://localhost:port\")\n    .boolean(\"dotenv\")\n    .describe(\"dotenv\", \"load .env setting\")\n    .boolean(\"devtools\")\n    .describe(\"devtools\", \"open devtools everypage\")\n    // .strict()\n    .alias(\"d\", \"devtools\")\n    .alias(\"e\", \"extension\")\n    .alias(\"p\", \"port\")\n    .alias(\"h\", \"help\")\n    .alias(\"v\", \"version\")\n    .help()\n    .version()\n    .epilog(\"(C) snomiao.com 2022\").argv;\n  await chromeDev({ ...argv, inputs: argv._.map(String) });\n}\n", "import { resolve } from \"path\";\nimport puppeteer from \"puppeteer\";\n// puppeteer.brows\n/**\n * chrome-dev\n * Author: snomiao <snomiao@gmail.com>\n */\nexport default async function chromeDev({\n  inputs = [] as string[],\n  extension = \"\",\n  openExtensionPage = undefined as boolean,\n  devtools = false,\n  ignoreHTTPSErrors = true,\n  ignoreDefaultArgs = false,\n  port = 0,\n  dotenv = true,\n  ...otherArgs\n} = {}) {\n  // console.log(\"otherArgs=\", otherArgs);\n\n  // open urls\n  const urls = new Set(inputs);\n\n  // TODO: match PORT=80, HOST=localhost, URL=localhost:80 and parse into URL\n  if (port) urls.add(`https://localhost:${port}/`);\n\n  const chromeArgs = [];\n  // load extension\n  if (extension) {\n    const extensionPath = resolve(process.cwd(), extension);\n    chromeArgs.push(`--load-extension=${extensionPath}`);\n    // urls.add(\"chrome://extensions\");\n  }\n  if (dotenv) {\n    await import(\"dotenv/config\");\n  }\n  // launch browser\n  const browser = await puppeteer.launch({\n    headless: false,\n    devtools,\n    ignoreDefaultArgs: ignoreDefaultArgs ? true : [\"--disable-extensions\"],\n    args: [...chromeArgs],\n    defaultViewport: null,\n    ignoreHTTPSErrors,\n  });\n\n  // need more page\n  if (urls.size) console.log(\"open urls: \", [...urls.values()]);\n  while ((await browser.pages()).length < urls.size) await browser.newPage();\n\n  const pages = await browser.pages();\n  await Promise.allSettled(pages.map((page, i) => page.goto([...urls.values()][i])));\n\n  console.log(\"All pages opened\");\n}\n"],
  "mappings": ";;;AACA,OAAO,WAAW;AAClB,SAAS,eAAe;;;ACFxB,SAAS,eAAe;AACxB,OAAO,eAAe;AAMtB,eAAO,UAAiC;AAAA,EACtC,SAAS,CAAC;AAAA,EACV,YAAY;AAAA,EACZ,oBAAoB;AAAA,EACpB,WAAW;AAAA,EACX,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,OAAO;AAAA,EACP,SAAS;AAAA,KACN;AACL,IAAI,CAAC,GAAG;AAIN,QAAM,OAAO,IAAI,IAAI,MAAM;AAG3B,MAAI;AAAM,SAAK,IAAI,qBAAqB,OAAO;AAE/C,QAAM,aAAa,CAAC;AAEpB,MAAI,WAAW;AACb,UAAM,gBAAgB,QAAQ,QAAQ,IAAI,GAAG,SAAS;AACtD,eAAW,KAAK,oBAAoB,eAAe;AAAA,EAErD;AACA,MAAI,QAAQ;AACV,UAAM,OAAO;AAAA,EACf;AAEA,QAAM,UAAU,MAAM,UAAU,OAAO;AAAA,IACrC,UAAU;AAAA,IACV;AAAA,IACA,mBAAmB,oBAAoB,OAAO,CAAC,sBAAsB;AAAA,IACrE,MAAM,CAAC,GAAG,UAAU;AAAA,IACpB,iBAAiB;AAAA,IACjB;AAAA,EACF,CAAC;AAGD,MAAI,KAAK;AAAM,YAAQ,IAAI,eAAe,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC;AAC5D,UAAQ,MAAM,QAAQ,MAAM,GAAG,SAAS,KAAK;AAAM,UAAM,QAAQ,QAAQ;AAEzE,QAAM,QAAQ,MAAM,QAAQ,MAAM;AAClC,QAAM,QAAQ,WAAW,MAAM,IAAI,CAAC,MAAM,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;AAEjF,UAAQ,IAAI,kBAAkB;AAChC;;;ADjDA,IAAI;AAMJ,eAAO,MAA6B;AAClC,QAAM,OAAO,MAAM,MAAM,QAAQ,QAAQ,IAAI,CAAC,EAC3C,WAAW,YAAY,EACvB,OAAO,WAAW,EAClB,SAAS,aAAa,gBAAgB,EACtC,OAAO,MAAM,EACb,SAAS,QAAQ,4BAA4B,EAC7C,QAAQ,QAAQ,EAChB,SAAS,UAAU,mBAAmB,EACtC,QAAQ,UAAU,EAClB,SAAS,YAAY,yBAAyB,EAE9C,MAAM,KAAK,UAAU,EACrB,MAAM,KAAK,WAAW,EACtB,MAAM,KAAK,MAAM,EACjB,MAAM,KAAK,MAAM,EACjB,MAAM,KAAK,SAAS,EACpB,KAAK,EACL,QAAQ,EACR,OAAO,sBAAsB,EAAE;AAClC,QAAM,UAAU,EAAE,GAAG,MAAM,QAAQ,KAAK,EAAE,IAAI,MAAM,EAAE,CAAC;AACzD;",
  "names": []
}
